{"version":3,"sources":["config/theme.js","components/Input/styles.js","components/Input/index.js","components/Button/index.js","components/BalanceContainer/styles.js","components/BalanceContainer/index.js","services/axios.js","views/BtcVerifier/styles.js","views/BtcVerifier/index.js","styles/GlobalStyles.js","App.js","index.js"],"names":["colorPrimary","colorPrimaryDark","colorSuccess","colorError","colorGray","colorLightWhite","colorBlack","colorWhite","borderRadius","borderRadiusLight","InputContainer","styled","div","InputBase","input","theme","Input","onChange","type","value","placeholder","isError","errorMsg","style","color","fontSize","defaultProps","Button","button","handleClick","propTypes","PropTypes","oneOf","isRequired","func","Wrapper","span","props","isConfirmed","BalanceContainer","balance","rest","string","size","api","axios","create","baseURL","headers","MainContainer","main","ContentWrapper","section","Title","h1","BalanceWrapper","balancesModel","confirmed","unconfirmed","BtcVerifier","useState","address","setAddress","isRequested","setIsRequested","setIsError","isLoading","setIsLoading","balances","setBalances","useEffect","updateBalance","a","get","data","interval","setInterval","clearInterval","validate","e","target","onClick","src","alt","className","createGlobalStyle","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7dda45c.chunk.js","sourcesContent":["export default {\n  colors: {\n    colorPrimary: '#F7931A',\n    colorPrimaryDark: '#D88117',\n    colorSuccess: '#5CB85C',\n    colorError: '#DC3543',\n    colorGray: '#808080',\n    colorLightWhite: 'rgba(255, 255, 255, 0.2)',\n    colorBlack: '#000',\n    colorWhite: '#FFF',\n  },\n  style: {\n    borderRadius: '5rem',\n    borderRadiusLight: '0.8rem',\n  },\n};\n","import styled from 'styled-components';\nimport theme from '../../config/theme';\n\nexport const InputContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: column;\n`;\n\nexport const InputBase = styled.input`\n  background: none;\n\n  border: 2px solid ${theme.colors.colorWhite};\n\n  height: 5rem;\n  padding: 0 2.5rem;\n  font-size: 1.8rem;\n\n  border-radius: ${theme.style.borderRadius};\n  text-align: center;\n\n  &:hover {\n    background: ${theme.colors.colorLightWhite};\n  }\n\n  &:focus {\n    border-radius: ${theme.style.borderRadiusLight};\n    border-color: ${theme.colors.colorPrimary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.colorGray};\n    text-transform: capitalize;\n  }\n  transition: all 0.3s;\n  width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { InputBase, InputContainer } from './styles';\nimport theme from '../../config/theme';\n\nexport default function Input({\n  onChange,\n  type,\n  value,\n  placeholder,\n  isError,\n  errorMsg,\n}) {\n  return (\n    <InputContainer>\n      <InputBase\n        onChange={onChange}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n      />\n      {isError && (\n        <small\n          style={{\n            color: theme.colors.colorError,\n            fontSize: '1.5rem',\n          }}\n        >\n          {errorMsg}\n        </small>\n      )}\n    </InputContainer>\n  );\n}\n\nInput.defaultProps = {\n  isError: false,\n  errorMsg: '',\n  placeholder: '',\n  type: 'text',\n  value: '',\n  onChange: () => {},\n};\n\nInput.propTypes = {\n  value: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  isError: PropTypes.bool,\n  errorMsg: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport theme from '../../config/theme';\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  cursor: pointer;\n  font-size: 2rem;\n  font-weight: bold;\n  text-transform: uppercase;\n\n  border: none;\n  background: ${theme.colors.colorPrimaryDark};\n  border-radius: ${theme.style.borderRadiusLight};\n  padding: 1.2rem;\n\n  &:hover {\n    background: ${theme.colors.colorPrimary};\n    transform: scale(1.03);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n\n  transition: all 0.3s;\n`;\n\nexport default Button;\n\nButton.defaultProps = {\n  handleClick: () => {},\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf(['submit', 'button', 'reset']).isRequired,\n  handleClick: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport theme from '../../config/theme';\n\nexport const Wrapper = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  gap: 1rem;\n\n  padding: 1.5rem 1rem;\n\n  text-align: center;\n  font-weight: bold;\n  border-radius: ${theme.style.borderRadiusLight};\n  background: ${(props) =>\n    props.isConfirmed ? theme.colors.colorSuccess : theme.colors.colorError};\n\n  transition: all 0.3s;\n\n  &:hover {\n    filter: brightness(70%);\n    transform: scale(1.03);\n  }\n\n  @media screen and (max-width: 900px) {\n    padding: 1.2rem;\n    flex-direction: column;\n  }\n  width: 48%;\n`;\n","import React from 'react';\n\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\n\nimport PropTypes from 'prop-types';\nimport { Wrapper } from './styles';\n\nconst iconSize = 30;\nexport default function BalanceContainer({ isConfirmed, balance, ...rest }) {\n  const string = `${balance || 'No'} ${\n    isConfirmed ? 'Confirmed' : 'Unconfirmed'\n  } balance(s)`;\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Wrapper isConfirmed={isConfirmed} {...rest}>\n      {isConfirmed ? (\n        <FaCheckCircle size={iconSize} />\n      ) : (\n        <FaTimesCircle size={iconSize} />\n      )}\n      {string}\n    </Wrapper>\n  );\n}\n\nBalanceContainer.defaultProps = {\n  isConfirmed: false,\n};\n\nBalanceContainer.propTypes = {\n  isConfirmed: PropTypes.bool,\n  balance: PropTypes.number.isRequired,\n};\n","import axios from 'axios';\n\nconst baseUrl = 'https://btc-balance-api.herokuapp.com/';\nconst api = axios.create({\n  baseURL: baseUrl,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","import styled from 'styled-components';\nimport theme from '../../config/theme';\n\nexport const MainContainer = styled.main`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContentWrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  margin: auto;\n  width: 90%;\n  max-width: 700px;\n\n  button {\n    margin-top: 1.5rem;\n    width: 100%;\n  }\n\n  .feedback {\n    margin-top: 1.2rem;\n  }\n\n  .error {\n    color: ${theme.colors.colorError};\n    font-size: 1.5rem;\n  }\n\n  .loading {\n    width: 5rem;\n    height: 5rem;\n    margin-top: 1.2rem;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 4rem;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1.2rem;\n  margin-bottom: 1.5rem;\n  align-self: center;\n\n  @media screen and (max-width: 1500px) {\n    font-size: 2.5rem;\n  }\n\n  @media screen and (max-width: 900px) {\n    flex-direction: column;\n    font-size: 2rem;\n  }\n`;\n\nexport const BalanceWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n\n  margin-top: 1.2rem;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { RiBitCoinLine } from 'react-icons/ri';\n\nimport { validate } from 'bitcoin-address-validation';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport BalanceContainer from '../../components/BalanceContainer';\n\nimport api from '../../services/axios';\nimport theme from '../../config/theme';\n\nimport { MainContainer, ContentWrapper, Title, BalanceWrapper } from './styles';\n\nconst balancesModel = {\n  confirmed: '',\n  unconfirmed: '',\n};\n\nexport default function BtcVerifier() {\n  const [address, setAddress] = useState('');\n\n  const [isRequested, setIsRequested] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [balances, setBalances] = useState(balancesModel);\n\n  // If isRequested auto update balance every 5 seconds.\n  useEffect(() => {\n    if (!isRequested) return null;\n    const updateBalance = async () => {\n      const { data } = await api.get(`/balance/${address}`);\n      setBalances(data);\n    };\n\n    updateBalance();\n    const interval = setInterval(() => updateBalance(), 5000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isRequested]);\n\n  const handleClick = async () => {\n    if (!address || !validate(address)) {\n      if (isRequested) setIsRequested(false);\n      return setIsError(true);\n    }\n    if (isError) setIsError(!isError);\n\n    setIsRequested(true);\n    try {\n      setIsLoading(true);\n      const { data } = await api.get(`/balance/${address}`);\n      setBalances(data);\n    } catch (e) {\n      setIsRequested(false);\n    }\n    return setIsLoading(false);\n  };\n\n  const { confirmed, unconfirmed } = balances;\n  return (\n    <MainContainer>\n      <ContentWrapper>\n        <Title>\n          <RiBitCoinLine size={80} color={theme.colors.colorPrimary} />\n          Bitcoin Balance Checker\n        </Title>\n\n        <Input\n          type=\"text\"\n          placeholder=\"bitcoin address\"\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n          isError={isError}\n          errorMsg=\"Type a valid bitcoin address.\"\n        />\n\n        <Button type=\"button\" onClick={handleClick}>\n          Check\n        </Button>\n\n        {isRequested && !isLoading && (\n          <BalanceWrapper>\n            <BalanceContainer balance={confirmed} isConfirmed />\n            <BalanceContainer balance={unconfirmed} />\n          </BalanceWrapper>\n        )}\n\n        {isRequested && isLoading && (\n          <img\n            src=\"https://focorepresentacao.com.br/lib/images/loading-orange.gif\"\n            alt=\"Loading\"\n            className=\"loading\"\n          />\n        )}\n      </ContentWrapper>\n    </MainContainer>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport theme from '../config/theme';\n\nexport default createGlobalStyle`\n  :root {\n    font-size: 62.5%;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: none;\n  }\n\n\n  html, body {\n    min-height: 100vh;\n  }\n\n  body {\n    display: flex;\n    flex-direction: column;\n\n    background: ${theme.colors.colorBlack};\n  }\n\n  html,\n  body,\n  input,\n  button {\n    font: 500 1.6rem Nunito;\n    color: ${theme.colors.colorWhite};\n  }\n\n  #root {\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n  }\n\n  @media screen and (max-width: 900px) {\n    :root {\n      font-size: 60%;\n    }\n  }\n`;\n","import React from 'react';\n\nimport BtcVerifier from './views/BtcVerifier';\n\nimport GlobalStyles from './styles/GlobalStyles';\n\nexport default function App() {\n  return (\n    <>\n      <BtcVerifier />\n      <GlobalStyles />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}